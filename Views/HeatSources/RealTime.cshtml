@model ReliDemo.ViewModels.HeatSourceRealTimeViewModel 

@{
    ViewBag.Title = "RealTime";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<p>上次更新时间 @Model.UpdatedAt</p>
<div class="row-fluid clearfix stationTitle">
    <h1 class="span3">热源厂实时监测</h1>
    <div onDesktop="span4" onTablet="span6" onMobile="span12">@Html.Partial("_TopMenu") </div>
</div>

@Html.HiddenFor(model=>model.UpdatedAt)

<div class="row-fluid">
        每页显示：
<ul class="nav nav-pills" id="pills">
<li @if( Model.PageSize == 10) {<text> class="active" </text>} >
    @Html.ActionLink("10", "RealTime", new { startIndex = 0, pageSize = 10, selectedRegion = Model.SelectedRegion})
</li>
<li @if( Model.PageSize == 50) {<text> class="active" </text>} >
    @Html.ActionLink("50", "RealTime", new { startIndex = 0, pageSize = 50, selectedRegion = Model.SelectedRegion })
</li>
<li @if( Model.PageSize == 100) {<text> class="active" </text>} >
    @Html.ActionLink("100", "RealTime", new { startIndex = 0, pageSize = 100, selectedRegion = Model.SelectedRegion })
</li>
</ul>
</div>
<div class="alert alert-block hidden">
	 @Html.ActionLink("有<big></big>条新数据，请点击刷新", "RealTime", new { startIndex = 0, pageSize = 10, selectedRegion = Model.SelectedRegion})
</div>
<div class="scrollableTableContainer">
<table class="table  table-bordered table-hover  table-condensed table-clickhighlight datatable" style="background:white">
    <thead><tr>
        <th>
            热源名称
        </th>
        <th>
            机组名
        </th>
        <th>
            供压
            <span class="symbol">(MPa)</span>
        </th>
        <th>
            回压
            <span class="symbol">(MPa)</span>
        </th>
        <th>
            供温
            <span class="symbol">(℃)</span>
        </th>
        <th>
            回温
            <span class="symbol">(℃)</span>
        </th>
        
        <th>
           瞬时供水流量
           <span class="symbol">(t/h)</span>
        </th>
        <th>
            瞬时供水热量
            <span class="symbol">(GJ/h)</span>
        </th> 
        <th>
            瞬时回水流量
            <span class="symbol">(t/h)</span>
        </th>
        <th>
            瞬时回水热量
            <span class="symbol">(GJ/h)</span>
        </th>
        <th>
            瞬时热量
            <span class="symbol">(GJ/h)</span>
        </th>
        <th>
            瞬时补水量
            <span class="symbol">(t)</span>
        </th>
        <th>
            累计供水流量
            <span class="symbol">(t)</span>
        </th>
        <th>
            累计供水热量
            <span class="symbol">(GJ)</span>
        </th>
        <th>
            累计回水流量
            <span class="symbol">(t)</span>
        </th>
        <th>
            累计回水热量
            <span class="symbol">(GJ)</span>
        </th>
        <th>
            累计热量
            <span class="symbol">(GJ)</span>
        </th>
        <th>
            累计补水量
            <span class="symbol">(t)</span>
        </th>
        <th>
            今日
            <span class="symbol">(GJ)</span>
        </th>
        
        <th>
            昨日
            <span class="symbol">(GJ)</span>
        </th>
        <th>
            采集时间
        </th>
    </tr></thead>
    @for (int i = 0; i < Model.HeatSourceRecents.Count(); i++)
    {
        var heatSourceRecent = Model.HeatSourceRecents.ElementAt(i);
        <tr>
            <td>
                @Html.ActionLink(heatSourceRecent.热源名称, "History", new { heatSourceId = heatSourceRecent.生产热源ID })
            </td>
            <td>
                @heatSourceRecent.机组名
            </td>
            <td>
                @heatSourceRecent.供压
            </td>
            <td>
                @heatSourceRecent.回压
            </td>
            <td>
                @heatSourceRecent.供温
            </td>
            <td>
                @heatSourceRecent.回温
            </td>
            <td>
                @heatSourceRecent.瞬时供水流量
            </td>
            <td>
                @heatSourceRecent.瞬时供水热量
            </td>
            <td>
                @heatSourceRecent.瞬时回水流量
            </td>
            <td>
                @heatSourceRecent.瞬时回水热量
            </td>
            <td>
                @heatSourceRecent.瞬时热量
            </td>
            <td>
                @heatSourceRecent.瞬时补水量
            </td>
            <td>
                @heatSourceRecent.累计供水流量
            </td>
            <td>
                @heatSourceRecent.累计供水热量
            </td>
            <td>
                @heatSourceRecent.累计回水流量
            </td>
            <td>
                @heatSourceRecent.累计回水热量
            </td>
            <td>
                @heatSourceRecent.累计热量
            </td>
            <td>
                @heatSourceRecent.累计补水量
            </td>
            <td>
                @heatSourceRecent.今日GJ
            </td>
            
            <td>
                @heatSourceRecent.昨日GJ
            </td>
            <td class="time">
                @(heatSourceRecent.采集时间.HasValue? heatSourceRecent.采集时间.Value.ToString("yyyy-MM-dd HH:mm") : "")
            </td>
        </tr>   
    }
</table>
</div>
<div class="row-fluid">
<div class="pagination pagination-centered">
    <ul>
		@if ((Model.StartIndex % 10 - 12) * Model.PageSize >=0)
        {
            <li>@Html.ActionLink("« 前十页", "RealTime", new { startIndex = Model.StartIndex - 10, pageSize = Model.PageSize, selectedRegion = Model.SelectedRegion })</li>
        }
        @if ((Model.StartIndex % 10 - 1) * Model.PageSize >=0)
        {
            <li>@Html.ActionLink("« 上一页", "RealTime", new { startIndex = Model.StartIndex - 1, pageSize = Model.PageSize, selectedRegion = Model.SelectedRegion })</li>
        }
        
        @for (int i = Model.StartIndex/10*10;  i < Model.StartIndex/10*10+10 ; i++)
        {
            if (i <= Model.TotalItemCount / Model.PageSize)
            {
            <li @if (i == Model.StartIndex)
                { <text>class="active"</text>}>
                @Html.ActionLink((i + 1).ToString(), "RealTime", new { startIndex = i, pageSize = Model.PageSize, selectedRegion = Model.SelectedRegion }) 
            </li>
            }
        }
       
        @if ((Model.StartIndex % 10 + 1) * Model.PageSize <= Model.TotalItemCount)
        {
            <li>@Html.ActionLink("下一页 »", "RealTime", new { startIndex = Model.StartIndex + 1, pageSize = Model.PageSize, selectedRegion = Model.SelectedRegion })</li>
        }
		 @if ((Model.StartIndex % 10 + 11) * Model.PageSize <= Model.TotalItemCount)
        {
            <li>@Html.ActionLink("后十页 »", "RealTime", new { startIndex = Model.StartIndex + 11, pageSize = Model.PageSize, selectedRegion = Model.SelectedRegion })</li>
        }
    </ul>
</div>
</div>

<script>
    $(function () {
        setInterval("CheckNewData()", 5 * 60 * 1000);
    });

    function CheckNewData() {
        var dataurl = "GetNewDataCount?fromTime=" + $("#UpdatedAt").val();

        function onDataReceived(series) {
            if (series.newDataCount > 0) {
                $(".alert").removeClass("hidden").find("big").html(series.newDataCount) ;
            }
        }

        $.ajax({
            url: dataurl,
            type: "GET",
            dataType: "json",
            success: onDataReceived
        });
    }
</script>