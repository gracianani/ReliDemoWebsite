@model ReliDemo.ViewModels.GJHistoriesViewModel
<style>
#dashboard-heat-temp-chart { height: 250px; position: relative;}
.legend table, .legend > div { height: 82px !important; opacity: 1 !important; right: -55px; top: 10px; width: 116px !important; }
.legend table { border: 1px solid #555; padding: 5px; }
#dashboard-heat-temp-lengend table,#dashboard-company-area-legend table { margin: 10px auto;}

</style>

<div class="box blue span12 noMarginLeft" id="heatConsumptionGraph">
	<div class="box-header">
		<h2><i class="icon-bar-chart"></i>实际温度、供热量日统计</h2>
		<div class="box-subTitle"><a class="btn btn-small" id="today">今日</a> <a class="btn btn-small selected" id="lastSevenDays">最近7天</a> <a class="btn btn-small" id="lastThirtyDays">最近30天</a> <a class="btn btn-small" id="thisYear">本供暖季</a>
		</div>
	</div>
	<div class="box-content">
		<div id="dashboard-heat-temp-chart" style="width:100%;height:250px"></div>	
		<div id="dashboard-heat-temp-lengend" ></div>

	</div>	
</div><!--/span-->



@Html.Hidden("plan", @Model.计划Data)
@Html.Hidden("theory", @Model.核算Data)
@Html.Hidden("actual", @Model.实际Data)
@Html.Hidden("temperatureForecast", @Model.预报温度)
@Html.Hidden("temperatureActual", @Model.实际温度)
@Html.Hidden("fromDate", @Model.FromDate)
@Html.Hidden("toDate", @Model.ToDate)

<script>
    $(document).ready(function () {

        var d1 = $.parseJSON($("input[name=plan]").val());
        var d2 = $.parseJSON($("input[name=theory]").val());
        var d3 = $.parseJSON($("input[name=actual]").val());
        var today = new Date();
        var tempPlan = $.parseJSON($("input[name=temperatureForecast]").val());
        var tempActu = $.parseJSON($("input[name=temperatureActual]").val()); 
		var lengendContainer = $('#dashboard-heat-temp-lengend');
		
        var heatTempChartData = [{
            label: "实际平均温度",
            data: tempPlan,
            lines: { show: true },
            points: { show: true }

        }, {
            label: "预报平均温度",
            data: tempActu,
            lines: { show: true },
            points: { show: true }

        }, {

            label: "当日计划供热量",
            data: d1,
            bars: { show: true, order: 1, fill: true, barWidth: 24 * 60 * 60 * 100, lineWidth: 1 },
            yaxis: 2


        }, {

            label: "当日折算供热量",
            data: d2,
            bars: { show: true, order: 2, fill: true, barWidth: 24 * 60 * 60 * 100, lineWidth: 1 },
            yaxis: 2

        }, {

            label: "当日累计供热量",
            data: d3,
            bars: { show: true, order: 3, fill: true, barWidth: 24 * 60 * 60 * 100, lineWidth: 1 },
            yaxis: 2

        }];



        var heatTempChartGrid = {
            tickColor: "#eee",
            borderWidth: 0,
            hoverable: true,
            clickable: true
        };
        var heatTempChartOptions = {
            xaxis: {
                mode: "time",
                minTickSize: [1, "day"],
                timeformat: "%m月%d日"
            },
            grid: heatTempChartGrid,
            yaxes: [{}, {
                position: "right"
            }],
			legend:{
			container:lengendContainer,
			noColumns:5
			}

        };
        var heatTempChartOptionsLastWeek = {
            xaxis: {
                mode: "time",
                minTickSize: [1, "day"],
                timeformat: "%m月%d日"
            }, yaxes: [{}, {
                position: "right"
            }],
            grid: heatTempChartGrid,
			legend:{
			container:lengendContainer,
			noColumns: 5
			}
        };
        var heatTempChartOptionsLastMonth = {
            xaxis: {
                mode: "time",
                minTickSize: [1, "day"],
                minTickSize: [1, "day"],
                timeformat: "%m月%d日"
            }, yaxes: [{}, {
                position: "right"
            }],
            grid: heatTempChartGrid,
			legend:{
			container:lengendContainer,
			noColumns: 5
			}
        };

        var dashboardHeatTempChart = $.plot($("#dashboard-heat-temp-chart"), heatTempChartData, heatTempChartOptionsLastWeek);
        $("<div id='tooltip'></div>").appendTo("body");

        $("#dashboard-heat-temp-chart").bind("plothover", function (event, pos, item) {
            if (item) {
                var x = item.datapoint[0];
                $("#tooltip").html(item.series.label + " : " + item.datapoint[1])
				.css({ top: item.pageY + 5, left: item.pageX + 5 })
				.fadeIn(200);
            } else {
                $("#tooltip").hide();
            }
        });

        $("#dashboard-heat-temp-chart").bind("plotclick", function (event, pos, item) {
            if (item) {
                $("#clickdata").text(" - click point " + item.dataIndex + " in " + item.series.label);
                dashboardHeatTempChart.highlight(item.series, item.datapoint);
            }
        });

		$("#thisYear").click(function () {
		dashboardHeatTempChart = $.plot("#dashboard-heat-temp-chart", heatTempChartData, heatTempChartOptions);
		});
		$("#lastSevenDays").click(function () {
		dashboardHeatTempChart = $.plot("#dashboard-heat-temp-chart", heatTempChartData, heatTempChartOptionsLastWeek);
		});
		$("#lastThirtyDays").click(function () {
		dashboardHeatTempChart = $.plot("#dashboard-heat-temp-chart", heatTempChartData, heatTempChartOptionsLastMonth);
		});
    });

</script>