@model ReliDemo.ViewModels.StationsRealTimeViewModel 

@{
    ViewBag.Title = "热力站实时监测";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
 <h2 style='font-family: "Microsoft Yahei",sans-serif;
font-size: 24px;
margin-bottom: 0.9em;
line-height: 30px;'>@ViewBag.Title <span style="font-size:14px"> 上次更新时间 @Model.UpdatedAt </span></h2>
@using (Html.BeginForm("RealTime", "Stations", FormMethod.Get))
{
<div class="row-fluid">
    
        @Html.DropDownListFor(i => i.SelectedHeatSourceId, new SelectList(ReliDemo.Infrastructure.Helpers.HeatSourceHelper.HeatSources, "生产热源ID", "生产热源"), "请选择热源厂", new { @class = "span2" })
        <text>&nbsp;</text>
        @Html.DropDownListFor(model => model.SelectedCompanyId, new SelectList(Model.Companies, "Id", "Name"), "请选择公司", new { @class = "span2" })
        <text>&nbsp;</text>
        @Html.DropDownList("managerships", new SelectList(Model.Managerships, "Id", "Name"), "请选择管理单位", new { id = "managerships", @class = "span2" })
        <text>&nbsp;</text>
        @Html.DropDownListFor(model => model.SelectedArea, new SelectList(Model.Regions, "Id", "Name"), "请选择区域", new { @class = "span2" })
        <text>&nbsp;</text>
        @Html.EditorFor(model => model.SearchKeyword)
        <text>&nbsp;</text>
        <input type="submit" value="搜索" class="btn  btn-primary" style="vertical-align: top;"/>
   
</div>
<div class="row-fluid">
    <div class="box" onDesktop="span4" onTablet="span12 noMarginLeft">
		<div class="box-header"><h2>多耗%筛选</h2></div>
		<div class="box-content form-inline">
		<label class="inline">从</label>
		<input type="text" class="input-mini inline" name="exceedHeatFrom" value="@Model.单耗超标From" />
		<label class="inline">% 到</label>
		<input type="text" class="input-mini inline" name="exceedHeatTo" value="@Model.单耗超标To"/>
		<label class="inline">%</label>
		</div>
	</div>
    <div class="box" onDesktop="span4" onTablet="span12 noMarginLeft">
		<div class="box-header"><h2>流量筛选</h2></div>
		<div class="box-content form-inline">
		<label class="inline">从</label>
		<input type="text" class="input-mini inline" name="exceedWaterFrom" value="@Model.流量超标From" />
		<label class="inline">t 到</label>
		<input type="text" class="input-mini inline" name="exceedWaterTo" value="@Model.流量超标To"/>
		<label class="inline">t</label>
		</div>
	</div>
    <div class="box" onDesktop="span4" onTablet="span12 noMarginLeft">
		<div class="box-header"><h2>回温筛选</h2></div>
		<div class="box-content form-inline">
		<label class="inline">从</label>
		<input type="text" class="input-mini inline" name="exceedTemperatureFrom" value="@Model.回温超标From" />
		<label class="inline">℃ 到</label>
		<input type="text" class="input-mini inline" name="exceedTemperatureTo" value="@Model.回温超标To"/>
		<label class="inline">℃</label>
		</div>
	</div>
</div>
}
<div class="row-fluid">
        每页显示：
<ul class="nav nav-pills" id="pills">
<li @if (Model.StationsRealTime.PageSize == 10)
    {
    <text> class="active" </text> 
    } >
    @Html.ActionLink("10", "RealTime", new { startIndex = Model.StationsRealTime.PageIndex, pageSize = 10, selectedCompanyId = Model.SelectedCompanyId,
                                              managerships = Model.SelectedManagershipId,
                                              heatsources = Model.SelectedHeatSourceId,
                                              selectedRegion = Model.SelectedArea,
                                              searchKeyWord = Model.SearchKeyword,
                                              exceedTemperatureFrom = Model.回温超标From,
                                              exceedTemperatureTo = Model.回温超标To,
                                              exceedWaterFrom = Model.流量超标From,
                                              exceedWaterTo = Model.流量超标To,
                                              exceedHeatFrom = Model.单耗超标From,
                                              exceedHeatTo = Model.单耗超标To
})
</li>
<li @if (Model.StationsRealTime.PageSize == 50)
    {
    <text> class="active" </text> 
    } >
    @Html.ActionLink("50", "RealTime", new { startIndex = Model.StationsRealTime.PageIndex, pageSize = 50, selectedCompanyId = Model.SelectedCompanyId,
                                              managerships = Model.SelectedManagershipId,
                                              heatsources = Model.SelectedHeatSourceId,
                                              selectedRegion = Model.SelectedArea,
                                              searchKeyWord = Model.SearchKeyword,
                                              exceedTemperatureFrom = Model.回温超标From,
                                              exceedTemperatureTo = Model.回温超标To,
                                              exceedWaterFrom = Model.流量超标From,
                                              exceedWaterTo = Model.流量超标To,
                                              exceedHeatFrom = Model.单耗超标From,
                                              exceedHeatTo = Model.单耗超标To
})
</li>
<li @if (Model.StationsRealTime.PageSize == 100)
    {
    <text> class="active" </text> 
    }>
    @Html.ActionLink("100", "RealTime", new
{
    startIndex = Model.StationsRealTime.PageIndex,
    pageSize = 100,
    selectedCompanyId = Model.SelectedCompanyId,
    managerships = Model.SelectedManagershipId,
    heatsources = Model.SelectedHeatSourceId,
    selectedRegion = Model.SelectedArea,
    searchKeyWord = Model.SearchKeyword,
    exceedTemperatureFrom = Model.回温超标From,
    exceedTemperatureTo = Model.回温超标To,
    exceedWaterFrom = Model.流量超标From,
    exceedWaterTo = Model.流量超标To,
    exceedHeatFrom = Model.单耗超标From,
    exceedHeatTo = Model.单耗超标To
})
</li>

</ul>
</div>
@Html.HiddenFor(model => model.UpdatedAt)
<div class="alert alert-block hidden">
	 @Html.ActionLink("有{count}条新数据，请点击刷新", "RealTime", new { startIndex = Model.StationsRealTime.PageIndex, pageSize = 10, selectedCompanyId = Model.SelectedCompanyId, managerships = Model.SelectedManagershipId, heatsources = Model.SelectedHeatSourceId, selectedRegion = Model.SelectedArea, searchKeyWord = Model.SearchKeyword })
</div>

<div class="scrollableTableContainer">
<table class="table  table-bordered table-hover  table-condensed table-clickhighlight datatable" style="background:white">
<thead>
    <tr>
        <th>
            @Html.DisplayName("采集点")
        </th>
        <th>
            @Html.DisplayName("采集时间")
        </th>
        <th>
            @Html.DisplayName("供压(MPa)")
        </th>
        <th>
            @Html.DisplayName("回压(MPa)")
        </th>
        <th>
            @Html.DisplayName("供温(℃)")
        </th>
        <th>
            @Html.DisplayName("回温(℃)")
        </th>
        <th>
            @Html.DisplayName("总累计流量(t)")
        </th>
        <th>
            @Html.DisplayName("总累计热量(GJ)")
        </th>
        <th>
            @Html.DisplayName("总瞬时流量(t/h)")
        </th>
        <th>
            @Html.DisplayName("总瞬时热量(GJ/h)")
        </th>
        <th>
            @Html.DisplayName("日累计单耗(GJ/㎡)")
        </th>
        <th>
            @Html.DisplayName("万平方米流量(t/h)")
        </th>
        <th>
            @Html.DisplayName("多耗(GJ/㎡)")
        </th>
        <th>
            @Html.DisplayName("多耗%")
        </th>
    </tr>
</thead>
@foreach (var p in Model.StationsRealTime)
{
    <tr>
        <td>
            @Html.ActionLink(p.热力站名称, "StationRealTime", new { stationId = p.ItemID })
        </td>
        <td class="time">
            @p.采集时间
        </td>
        <td>
            @p.一次供压
        </td>
        <td>
            @p.一次回压
        </td> 
        <td>
            @p.一次供温
        </td>
        <td>
            @p.一次回温
        </td>
        <td>
            @p.总累计流量
        </td>
        <td>
            @p.总累计热量
        </td>
        <td>
            @p.总瞬时流量
        </td>
        <td>
            @p.总瞬时热量
        </td>
        <td>
            @p.今日累计单耗
        </td>
        <td>
            @p.万平方米流量
        </td>
        <td>
            @p.多耗
        </td>
        <td>@p.多耗percent</td>
        
    </tr>
}
</table>
</div>
<div class="row-fluid">
<div class="pagination pagination-centered">
    <ul>
                @if ((Model.StationsRealTime.PageIndex % 10 - 12) * Model.StationsRealTime.PageSize >= 0)
                {
            <li>@Html.ActionLink("« 前十页", "RealTime", new { startIndex = Model.StationsRealTime.PageIndex - 10, pageSize = Model.StationsRealTime.PageSize, selectedCompanyId = Model.SelectedCompanyId, managerships = Model.SelectedManagershipId, heatsources = Model.SelectedHeatSourceId, selectedRegion = Model.SelectedArea, searchKeyWord = Model.SearchKeyword })</li>
                }
        @if ((Model.StationsRealTime.PageIndex % 10 - 1) * Model.StationsRealTime.PageSize >= 0)
        {
            <li>@Html.ActionLink("« 上一页", "RealTime", new { startIndex = Model.StationsRealTime.PageIndex - 1, pageSize = Model.StationsRealTime.PageSize, selectedCompanyId = Model.SelectedCompanyId, managerships = Model.SelectedManagershipId, heatsources = Model.SelectedHeatSourceId, selectedRegion = Model.SelectedArea, searchKeyWord = Model.SearchKeyword })</li>
        }
        
        @for (int i = Model.StationsRealTime.PageIndex / 10 * 10; i < Model.StationsRealTime.PageIndex / 10 * 10 + 10; i++)
        {
            if (i <= Model.StationsRealTime.TotalCount / Model.StationsRealTime.PageSize)
            {
            <li @if (i == Model.StationsRealTime.PageIndex)
                { <text>class="active"</text>}>
                @Html.ActionLink((i + 1).ToString(), "RealTime", new { startIndex = i, pageSize = Model.StationsRealTime.PageSize, selectedCompanyId = Model.SelectedCompanyId, managerships = Model.SelectedManagershipId, heatsources = Model.SelectedHeatSourceId, selectedRegion = Model.SelectedArea, searchKeyWord = Model.SearchKeyword }) 
            </li>
            }
        }
       
        @if ((Model.StationsRealTime.PageIndex % 10 + 1) * Model.StationsRealTime.PageSize <= Model.StationsRealTime.TotalCount)
        {
            <li>@Html.ActionLink("下一页 »", "RealTime", new { startIndex = Model.StationsRealTime.PageIndex + 1, pageSize = Model.StationsRealTime.PageSize, selectedCompanyId = Model.SelectedCompanyId, managerships = Model.SelectedManagershipId, heatsources = Model.SelectedHeatSourceId, selectedRegion = Model.SelectedArea, searchKeyWord = Model.SearchKeyword })</li>
        }
                 @if ((Model.StationsRealTime.PageIndex % 10 + 11) * Model.StationsRealTime.PageSize <= Model.StationsRealTime.TotalCount)
                 {
            <li>@Html.ActionLink("后十页 »", "RealTime", new { startIndex = Model.StationsRealTime.PageIndex + 11, pageSize = Model.StationsRealTime.PageSize, selectedCompanyId = Model.SelectedCompanyId, managerships = Model.SelectedManagershipId, heatsources = Model.SelectedHeatSourceId, selectedRegion = Model.SelectedArea, searchKeyWord = Model.SearchKeyword })</li>
                 }
    </ul>
</div>
</div>


<script>
    $(function () {
        $("select[name=SelectedCompanyId]").change(function () {
            $.ajax({
                url: "/Stations/GetManagershipsByCompanyId",
                type: "post",
                data: { companyId: $(this).val() },
                success: function (response, textStatus, jqXHR) {
                    $("#managerships").html("<option value>请选择管理单位</option>" + response).css("display", "");
                },
                error: function (jqXHR, textStatus, errorThrown) {
                },
                complete: function () {
                }
            });
        });
		$(".table tr").dblclick(function(e){
			var url = $(e.currentTarget).find("td:first a").attr("href");
			if ( url ) {
				window.location = url;
			}
        });
        setInterval("CheckNewData()", 5 * 60 * 1000);
    });

    function CheckNewData() {
        var dataurl = "GetNewDataCount?fromTime=" + $("#UpdatedAt").val();

        function onDataReceived(series) {

            if (series.newDataCount > 0) {
                var newHtml = $(".alert").removeClass("hidden").find("a").html().replace("{count}", series.newDataCount);
                $(".alert").removeClass("hidden").find("a").html(newHtml);
            }
        }

        $.ajax({
            url: dataurl,
            type: "GET",
            dataType: "json",
            success: onDataReceived
        });
    }
</script>